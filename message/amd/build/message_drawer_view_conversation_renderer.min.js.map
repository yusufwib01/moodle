{"version":3,"file":"message_drawer_view_conversation_renderer.min.js","sources":["../src/message_drawer_view_conversation_renderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module updates the UI for the conversation page in the message\n * drawer.\n *\n * The module will take a patch from the message_drawer_view_conversation_patcher\n * module and update the UI to reflect the changes.\n *\n * This is the only module that ever modifies the UI of the conversation page.\n *\n * @module     core_message/message_drawer_view_conversation_renderer\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'core/user_date',\n    'core_message/message_drawer_view_conversation_constants',\n    'core/aria',\n    'core/truncate',\n],\nfunction(\n    $,\n    Notification,\n    Str,\n    Templates,\n    UserDate,\n    Constants,\n    Aria,\n    Truncate,\n) {\n    var SELECTORS = Constants.SELECTORS;\n    var TEMPLATES = Constants.TEMPLATES;\n    var CONVERSATION_TYPES = Constants.CONVERSATION_TYPES;\n\n    /**\n     * Get the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getMessagesContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_MESSAGES_CONTAINER);\n    };\n\n    /**\n     * Show the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMessagesContainer = function(body) {\n        getMessagesContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMessagesContainer = function(body) {\n        getMessagesContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getSelfConversationMessageContainer = function(body) {\n        return body.find(SELECTORS.SELF_CONVERSATION_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Get the unable to message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The unable to message container element.\n     */\n    var getUnableToMessageContainer = function(body) {\n        return body.find(SELECTORS.UNABLE_TO_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Get the message text area element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The message text area element.\n     */\n    var getMessageTextArea = function(footer) {\n        return footer.find(SELECTORS.MESSAGE_TEXT_AREA);\n    };\n\n    /**\n     * Get the send message button element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The send message button element.\n     */\n    var getSendMessageButton = function(footer) {\n        return footer.find(SELECTORS.SEND_MESSAGE_BUTTON);\n    };\n\n    /**\n     * Get the emoji picker button element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker button element.\n     */\n    var getEmojiPickerButton = function(footer) {\n        return footer.find(SELECTORS.TOGGLE_EMOJI_PICKER_BUTTON);\n    };\n\n    /**\n     * Hide the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideSelfConversationMessageContainer = function(body) {\n        return getSelfConversationMessageContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getContactRequestSentContainer = function(body) {\n        return body.find(SELECTORS.CONTACT_REQUEST_SENT_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Hide the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideContactRequestSentContainer = function(body) {\n        return getContactRequestSentContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterContentContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_CONTAINER);\n    };\n\n    /**\n     * Show the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterContent = function(footer) {\n        getFooterContentContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterContent = function(footer) {\n        getFooterContentContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterEditModeContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER);\n    };\n\n    /**\n     * Show the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer placeholder.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer placeholder container element.\n     */\n    var getFooterPlaceholderContainer = function(footer) {\n        return footer.find(SELECTORS.PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Require add as contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Require add as contact container element.\n     */\n    var getFooterRequireContactContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER);\n    };\n\n    /**\n     * Show the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Required to unblock contact container element.\n     */\n    var getFooterRequireUnblockContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER);\n    };\n\n    /**\n     * Show the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).addClass('hidden');\n    };\n\n\n    /**\n     * Hide all header elements.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideAllHeaderElements = function(header) {\n        hideHeaderContent(header);\n        hideHeaderEditMode(header);\n        hideHeaderPlaceholder(header);\n    };\n\n    /**\n     * Hide all footer dialogues and messages.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideAllFooterElements = function(footer) {\n        hideFooterContent(footer);\n        hideFooterEditMode(footer);\n        hideFooterPlaceholder(footer);\n        hideFooterRequireContact(footer);\n        hideFooterRequireUnblock(footer);\n    };\n\n    /**\n     * Get the content placeholder container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The body placeholder container element.\n     */\n    var getContentPlaceholderContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the header content container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderContent = function(header) {\n        return header.find(SELECTORS.HEADER);\n    };\n\n    /**\n     * Show the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderContent = function(header) {\n        getHeaderContent(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderContent = function(header) {\n        getHeaderContent(header).addClass('hidden');\n    };\n\n    /**\n     * Show the unable to message container.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showUnableToMessage = function(body) {\n        getUnableToMessageContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the unable to message container.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideUnableToMessage = function(body) {\n        getUnableToMessageContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Enable the emoji picker button.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var enableEmojiPickerButton = function(footer) {\n        getEmojiPickerButton(footer).prop('disabled', false);\n    };\n\n    /**\n     * Enable the send message button.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var enableSendMessageButton = function(footer) {\n        getSendMessageButton(footer).prop('disabled', false);\n    };\n\n    /**\n     * Enable the message text area.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var enableMessageTextArea = function(footer) {\n        var messageTextArea = getMessageTextArea(footer);\n        messageTextArea.prop('disabled', false);\n        Aria.unhide(messageTextArea.get());\n\n        Str.get_string('writeamessage', 'core_message').done(function(string) {\n            if (!messageTextArea.prop('disabled')) {\n                messageTextArea.prop('placeholder', string);\n            }\n        });\n    };\n\n    /**\n     * Enable all footer content elements.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var enableAllFooterContentElements = function(footer) {\n        enableEmojiPickerButton(footer);\n        enableSendMessageButton(footer);\n        enableMessageTextArea(footer);\n    };\n\n    /**\n     * Disable the emoji picker button.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var disableEmojiPickerButton = function(footer) {\n        getEmojiPickerButton(footer).prop('disabled', true);\n    };\n\n    /**\n     * Disable the send message button.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var disableSendMessageButton = function(footer) {\n        getSendMessageButton(footer).prop('disabled', true);\n    };\n\n    /**\n     * Disable the message text area.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var disableMessageTextArea = function(footer) {\n        var messageTextArea = getMessageTextArea(footer);\n        messageTextArea.prop('disabled', true);\n        messageTextArea.removeAttr('placeholder');\n        Aria.unhide(messageTextArea.get());\n    };\n\n    /**\n     * Disable all footer content elements.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var disableAllFooterContentElements = function(footer) {\n        disableEmojiPickerButton(footer);\n        disableSendMessageButton(footer);\n        disableMessageTextArea(footer);\n    };\n\n    /**\n     * Get the header edit mode container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderEditMode = function(header) {\n        return header.find(SELECTORS.HEADER_EDIT_MODE);\n    };\n\n    /**\n     * Show the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderEditMode = function(header) {\n        getHeaderEditMode(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderEditMode = function(header) {\n        getHeaderEditMode(header).addClass('hidden');\n    };\n\n    /**\n     * Get the header placeholder container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header placeholder container element.\n     */\n    var getHeaderPlaceholderContainer = function(header) {\n        return header.find(SELECTORS.HEADER_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).addClass('hidden');\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiPickerContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_PICKER_CONTAINER);\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiAutoCompleteContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_AUTO_COMPLETE_CONTAINER);\n    };\n\n    /**\n     * Get a message element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} messageId the Message id.\n     * @return {Object} A message element from the conversation.\n     */\n    var getMessageElement = function(body, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-message-id=\"' + messageId + '\"]');\n    };\n\n    /**\n     * Get the day container element. The day container element holds a list of messages for that day.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} dayTimeCreated Midnight timestamp for the day.\n     * @return {Object} jQuery object\n     */\n    var getDayElement = function(body, dayTimeCreated) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-day-id=\"' + dayTimeCreated + '\"]');\n    };\n\n    /**\n     * Get the more messages loading icon container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The more messages loading container element.\n     */\n    var getMoreMessagesLoadingIconContainer = function(body) {\n        return body.find(SELECTORS.MORE_MESSAGES_LOADING_ICON_CONTAINER);\n    };\n\n    /**\n     * Show the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element to search.\n     * @return {Object} The confirm dialogue container element.\n     */\n    var getConfirmDialogueContainer = function(root) {\n        return root.find(SELECTORS.CONFIRM_DIALOGUE_CONTAINER);\n    };\n\n    /**\n     * Show the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var showConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings(':not(.hidden)');\n        Aria.hide(siblings.get());\n        siblings.attr('data-confirm-dialogue-hidden', true);\n\n        container.removeClass('hidden');\n    };\n\n    /**\n     * Hide the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var hideConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings('[data-confirm-dialogue-hidden=\"true\"]');\n        Aria.unhide(siblings.get());\n        siblings.removeAttr('data-confirm-dialogue-hidden');\n\n        container.addClass('hidden');\n    };\n\n    /**\n     * Set the number of selected messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Number} value The new number to display.\n     */\n    var setMessagesSelectedCount = function(header, value) {\n        getHeaderEditMode(header).find(SELECTORS.MESSAGES_SELECTED_COUNT).text(value);\n    };\n\n    /**\n     * Format message for the mustache template, transform camelCase properties to lowercase properties.\n     *\n     * @param  {Array} messages Array of message objects.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Array} Messages formated for mustache template.\n     */\n    var formatMessagesForTemplate = function(messages, datesCache) {\n        return messages.map(function(message) {\n            return {\n                id: message.id,\n                isread: message.isRead,\n                fromloggedinuser: message.fromLoggedInUser,\n                userfrom: message.userFrom,\n                text: message.text,\n                formattedtime: message.timeCreated ? datesCache[message.timeCreated] : null\n            };\n        });\n    };\n\n    /**\n     * Create rendering promises for each day containing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} days Array of days containing messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @param  {Boolean} isAbleToMessage Whether the user can send a message to the conversation.\n     * @return {Promise} Days rendering promises.\n     */\n    var renderAddDays = function(header, body, footer, days, datesCache, isAbleToMessage) {\n        var messagesContainer = getMessagesContainer(body);\n        var daysRenderPromises = days.map(function(data) {\n            var timestampDate = new Date(data.value.timestamp * 1000);\n            return Templates.render(TEMPLATES.DAY, {\n                timestamp: data.value.timestamp,\n                currentyear: timestampDate.getFullYear() === (new Date()).getFullYear(),\n                messages: formatMessagesForTemplate(data.value.messages, datesCache)\n            });\n        });\n\n        return $.when.apply($, daysRenderPromises).then(function() {\n            // Wait until all of the rendering is done for each of the days\n            // to ensure they are added to the page in the correct order.\n            days.forEach(function(data, index) {\n                // eslint-disable-next-line promise/no-nesting\n                daysRenderPromises[index]\n                    .then(function(html) {\n                        if (data.before) {\n                            var element = getDayElement(body, data.before.timestamp);\n                            return $(html).insertBefore(element);\n                        } else {\n                            return messagesContainer.append(html);\n                        }\n                    })\n                    .always(function() {\n                        var showUnableToMessage = !isAbleToMessage && index === days.length - 1;\n                        messagesContainer.find(SELECTORS.DAY_MESSAGE_UNABLE_TO_SEND_CONTAINER)\n                            .last().toggleClass('hidden', !showUnableToMessage);\n                        hideUnableToMessage(body);\n                    })\n                    .catch(function() {\n                        // Fail silently.\n                    });\n            });\n\n            return;\n        });\n    };\n\n    /**\n     * Add (more) messages to day containers.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Promise} Messages rendering promises.\n     */\n    var renderAddMessages = function(header, body, footer, messages, datesCache) {\n        var messagesData = messages.map(function(data) {\n            return data.value;\n        });\n        var formattedMessages = formatMessagesForTemplate(messagesData, datesCache);\n\n        return Templates.render(TEMPLATES.MESSAGES, {messages: formattedMessages})\n            .then(function(html) {\n                var messageList = $(html);\n                messages.forEach(function(data) {\n                    var messageHtml = messageList.find('[data-message-id=\"' + data.value.id + '\"]');\n                    if (data.before) {\n                        var element = getMessageElement(body, data.before.id);\n                        return messageHtml.insertBefore(element);\n                    } else {\n                        var dayContainer = getDayElement(body, data.day.timestamp);\n                        var dayMessagesContainer = dayContainer.find(SELECTORS.DAY_MESSAGES_CONTAINER);\n                        return dayMessagesContainer.append(messageHtml);\n                    }\n                });\n\n                return;\n            });\n    };\n\n    /**\n     * Update existing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     */\n    var renderUpdateMessages = function(header, body, footer, messages, datesCache) {\n        messages.forEach(function(message) {\n            var before = message.before;\n            var after = message.after;\n            var element = getMessageElement(body, before.id);\n\n            if (before.id != after.id) {\n                element.attr('data-message-id', after.id);\n            }\n\n            if (before.timeCreated != after.timeCreated) {\n                var formattedTime = datesCache[after.timeCreated];\n                element.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\n                element.find(SELECTORS.TIME_CREATED).text(formattedTime).removeClass('hidden');\n            }\n\n            if (before.sendState != after.sendState) {\n                var loading = element.find(SELECTORS.LOADING_ICON_CONTAINER);\n                var time = element.find(SELECTORS.TIME_CREATED);\n                var retry = element.find(SELECTORS.RETRY_SEND);\n\n                loading.addClass('hidden');\n                Aria.hide(loading.get());\n\n                time.addClass('hidden');\n                Aria.hide(time.get());\n\n                retry.addClass('hidden');\n                Aria.hide(retry.get());\n\n                element.removeClass('border border-danger');\n\n                switch (after.sendState) {\n                    case 'pending':\n                        loading.removeClass('hidden');\n                        Aria.unhide(loading.get());\n                        break;\n                    case 'error':\n                        retry.removeClass('hidden');\n                        Aria.unhide(retry.get());\n                        element.addClass('border border-danger');\n                        break;\n                    case 'sent':\n                        time.removeClass('hidden');\n                        Aria.unhide(time.get());\n                        break;\n                }\n            }\n\n            if (before.text != after.text) {\n                element.find(SELECTORS.TEXT_CONTAINER).html(after.text);\n            }\n\n            if (before.errorMessage != after.errorMessage) {\n                var messageContainer = element.find(SELECTORS.ERROR_MESSAGE_CONTAINER);\n                var message = messageContainer.find(SELECTORS.ERROR_MESSAGE);\n\n                if (after.errorMessage) {\n                    messageContainer.removeClass('hidden');\n                    Aria.unhide(messageContainer.get());\n                    message.text(after.errorMessage);\n                } else {\n                    messageContainer.addClass('hidden');\n                    Aria.unhide(messageContainer.get());\n                    message.text('');\n                }\n            }\n        });\n    };\n\n    /**\n     * Remove days from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} days Array of days to be removed.\n     */\n    var renderRemoveDays = function(body, days) {\n        days.forEach(function(data) {\n            getDayElement(body, data.timestamp).remove();\n        });\n    };\n\n    /**\n     * Remove messages from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} messages Array of messages to be removed.\n     */\n    var renderRemoveMessages = function(body, messages) {\n        messages.forEach(function(data) {\n            getMessageElement(body, data.id).remove();\n        });\n    };\n\n    /**\n     * Render the full conversation base on input from the statemanager.\n     *\n     * This will pre-load all of the formatted timestamps for each message that\n     * needs to render to reduce the number of networks requests.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Object} data The conversation diff.\n     * @return {Object} jQuery promise.\n     */\n    var renderConversation = function(header, body, footer, data) {\n        var renderingPromises = [];\n        var hasAddDays = data.days.add.length > 0;\n        var hasAddMessages = data.messages.add.length > 0;\n        var hasUpdateMessages = data.messages.update.length > 0;\n        var timestampsToFormat = [];\n        var datesCachePromise = $.Deferred().resolve({}).promise();\n\n        if (hasAddDays) {\n            // Search for all of the timeCreated values in all of the messages in all of\n            // the days that we need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.days.add.reduce(function(carry, day) {\n                return carry.concat(day.value.messages.reduce(function(timestamps, message) {\n                    if (message.timeCreated) {\n                        timestamps.push(message.timeCreated);\n                    }\n                    return timestamps;\n                }, []));\n            }, []));\n        }\n\n        if (hasAddMessages) {\n            // Search for all of the timeCreated values in all of the messages that we\n            // need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.messages.add.reduce(function(timestamps, message) {\n                if (message.value.timeCreated) {\n                    timestamps.push(message.value.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (hasUpdateMessages) {\n            timestampsToFormat = timestampsToFormat.concat(data.messages.update.reduce(function(timestamps, message) {\n                if (message.before.timeCreated != message.after.timeCreated) {\n                    timestamps.push(message.after.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (timestampsToFormat.length) {\n            // If we have timestamps then pre-load the formatted version of each of them\n            // in a single request to the server. This saves the templates doing multiple\n            // individual requests.\n            datesCachePromise = Str.get_string('strftimetime24', 'core_langconfig')\n                .then(function(format) {\n                    var requests = timestampsToFormat.map(function(timestamp) {\n                        return {\n                            timestamp: timestamp,\n                            format: format\n                        };\n                    });\n\n                    return UserDate.get(requests);\n                })\n                .then(function(formattedTimes) {\n                    return timestampsToFormat.reduce(function(carry, timestamp, index) {\n                        carry[timestamp] = formattedTimes[index];\n                        return carry;\n                    }, {});\n                });\n        }\n\n        if (hasAddDays) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddDays(header, body, footer, data.days.add, datesCache, !data.unableToMessage);\n            }));\n        }\n\n        if (hasAddMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddMessages(header, body, footer, data.messages.add, datesCache);\n            }));\n        }\n\n        if (hasUpdateMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderUpdateMessages(header, body, footer, data.messages.update, datesCache);\n            }));\n        }\n\n        if (data.days.remove.length > 0) {\n            renderRemoveDays(body, data.days.remove);\n        }\n\n        if (data.messages.remove.length > 0) {\n            renderRemoveMessages(body, data.messages.remove);\n        }\n\n        return $.when.apply($, renderingPromises);\n    };\n\n    /**\n     * Render the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for header.\n     * @return {Object} jQuery promise\n     */\n    var renderHeader = function(header, body, footer, data) {\n        var headerContainer = getHeaderContent(header);\n        var template = TEMPLATES.HEADER_PUBLIC;\n        data.context.showrouteback = (header.attr('data-from-panel') === \"false\");\n        if (data.type == CONVERSATION_TYPES.PRIVATE) {\n            template = data.showControls ? TEMPLATES.HEADER_PRIVATE : TEMPLATES.HEADER_PRIVATE_NO_CONTROLS;\n        } else if (data.type == CONVERSATION_TYPES.SELF) {\n            template = TEMPLATES.HEADER_SELF;\n        }\n\n        return Templates.render(template, data.context)\n            .then(function(html, js) {\n                Templates.replaceNodeContents(headerContainer, html, js);\n                return;\n            });\n    };\n\n    /**\n     * Render the conversation footer.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for footer.\n     * @return {Object} jQuery promise.\n     */\n    var renderFooter = function(header, body, footer, data) {\n        hideAllFooterElements(footer);\n\n        switch (data.type) {\n            case 'placeholder':\n                return showFooterPlaceholder(footer);\n            case 'add-contact':\n                return Str.get_strings([\n                        {\n                            key: 'requirecontacttomessage',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        },\n                        {\n                            key: 'isnotinyourcontacts',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        }\n                    ])\n                    .then(function(strings) {\n                        var title = strings[1];\n                        var text = strings[0];\n                        var footerContainer = getFooterRequireContactContainer(footer);\n                        footerContainer.find(SELECTORS.TITLE).text(title);\n                        footerContainer.find(SELECTORS.TEXT).text(text);\n                        showFooterRequireContact(footer);\n                        return strings;\n                    });\n            case 'edit-mode':\n                return showFooterEditMode(footer);\n            case 'content':\n                return showFooterContent(footer);\n            case 'unblock':\n                return showFooterRequireUnblock(footer);\n        }\n\n        return true;\n    };\n\n    /**\n     * Scroll to a message in the conversation.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Number} messageId Message id.\n     */\n    var renderScrollToMessage = function(header, body, footer, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        var messageElement = getMessageElement(body, messageId);\n        var position = messageElement.position();\n        // Scroll the message container down to the top of the message element.\n        if (position) {\n            var scrollTop = messagesContainer.scrollTop() + position.top;\n            messagesContainer.scrollTop(scrollTop);\n        }\n    };\n\n    /**\n     * Hide or show the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingMembers Members loading.\n     */\n    var renderLoadingMembers = function(header, body, footer, isLoadingMembers) {\n        if (isLoadingMembers) {\n            hideHeaderContent(header);\n            showHeaderPlaceholder(header);\n        } else {\n            showHeaderContent(header);\n            hideHeaderPlaceholder(header);\n        }\n    };\n\n    /**\n     * Hide or show loading conversation messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingFirstMessages Messages loading.\n     */\n    var renderLoadingFirstMessages = function(header, body, footer, isLoadingFirstMessages) {\n        if (isLoadingFirstMessages) {\n            hideMessagesContainer(body);\n            showContentPlaceholder(body);\n        } else {\n            showMessagesContainer(body);\n            hideContentPlaceholder(body);\n        }\n    };\n\n    /**\n     * Hide or show loading more messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading Messages loading.\n     */\n    var renderLoadingMessages = function(header, body, footer, isLoading) {\n        if (isLoading) {\n            showMoreMessagesLoadingIcon(body);\n        } else {\n            hideMoreMessagesLoadingIcon(body);\n        }\n    };\n\n    /**\n     * Hide or show the emoji picker.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiPicker = function(header, body, footer, show) {\n        var container = getEmojiPickerContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            Aria.unhide(container.get());\n            container.find(SELECTORS.EMOJI_PICKER_SEARCH_INPUT).focus();\n        } else {\n            container.addClass('hidden');\n            Aria.hide(container.get());\n        }\n    };\n\n    /**\n     * Hide or show the emoji auto complete.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiAutoComplete = function(header, body, footer, show) {\n        var container = getEmojiAutoCompleteContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            Aria.unhide(container.get());\n        } else {\n            container.addClass('hidden');\n            Aria.hide(container.get());\n        }\n    };\n\n    /**\n     * Show a confirmation dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {String} buttonSelectors Selectors for the buttons to show.\n     * @param {String} bodyText Text to show in dialogue.\n     * @param {String} headerText Text to show in dialogue header.\n     * @param {Bool} canCancel Can this dialogue be cancelled.\n     * @param {Bool} skipHeader Skip blanking out the header\n     * @param {Bool} showOk Show an 'Okay' button for a dialogue which will close it\n     */\n    var showConfirmDialogue = function(\n        header,\n        body,\n        footer,\n        buttonSelectors,\n        bodyText,\n        headerText,\n        canCancel,\n        skipHeader,\n        showOk\n    ) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = buttonSelectors.map(function(selector) {\n            return dialogue.find(selector);\n        });\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        dialogue.find('button').addClass('hidden');\n\n        if (canCancel) {\n            cancelButton.removeClass('hidden');\n        } else {\n            cancelButton.addClass('hidden');\n        }\n\n        if (showOk) {\n            okayButton.removeClass('hidden');\n        } else {\n            okayButton.addClass('hidden');\n        }\n\n        if (headerText) {\n            // Create the dialogue header.\n            dialogueHeader = $('<h3 class=\"h6\" data-region=\"dialogue-header\"></h3>');\n            dialogueHeader.text(headerText);\n            // Prepend it to the confirmation body.\n            var confirmDialogue = dialogue.find(SELECTORS.CONFIRM_DIALOGUE);\n            confirmDialogue.prepend(dialogueHeader);\n        } else if (dialogueHeader.length) {\n            // Header text is empty but dialogue header is present, so remove it.\n            dialogueHeader.remove();\n        }\n\n        buttons.forEach(function(button) {\n            button.removeClass('hidden');\n        });\n        text.text(bodyText);\n        showConfirmDialogueContainer(footer);\n        showConfirmDialogueContainer(body);\n\n        if (!skipHeader) {\n            showConfirmDialogueContainer(header);\n        }\n\n        dialogue.find(SELECTORS.CAN_RECEIVE_FOCUS).filter(':visible').first().focus();\n    };\n\n    /**\n     * Hide the dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool} always true.\n     */\n    var hideConfirmDialogue = function(header, body, footer) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        hideCheckDeleteDialogue(body);\n        hideConfirmDialogueContainer(body);\n        hideConfirmDialogueContainer(footer);\n        hideConfirmDialogueContainer(header);\n        dialogue.find('button').addClass('hidden');\n        cancelButton.removeClass('hidden');\n        okayButton.removeClass('hidden');\n        text.text('');\n\n        // Remove dialogue header if present.\n        if (dialogueHeader.length) {\n            dialogueHeader.remove();\n        }\n\n        header.find(SELECTORS.CAN_RECEIVE_FOCUS).first().focus();\n        return true;\n    };\n\n    /**\n     * Render the confirm block user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to block.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmBlockUser = function(header, body, footer, user) {\n        if (user) {\n            const username = truncateUsername(user.fullname);\n            if (user.canmessageevenifblocked) {\n                return Str.get_string('cantblockuser', 'core_message', username)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [], string, '', false, false, true);\n                    });\n            } else {\n                return Str.get_string('blockuserconfirm', 'core_message', username)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_BLOCK], string, '', true, false);\n                    });\n            }\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm unblock user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to unblock.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmUnblockUser = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('unblockuserconfirm', 'core_message', truncateUsername(user.fullname))\n                .then(function(string) {\n                    return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_UNBLOCK], string, '', true, false);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the add user as contact dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to add as contact.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmAddContact = function(header, body, footer, user) {\n        if (user) {\n            // Truncate long usernames.\n            const userFullName = Truncate.truncate(user.fullname, {\n                length: 30,\n                words: true,\n                ellipsis: '...'\n            });\n            return Str.get_string('addcontactconfirm', 'core_message', userFullName)\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_ADD_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the remove user from contacts dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to remove from contacts.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmRemoveContact = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('removecontactconfirm', 'core_message', truncateUsername(user.fullname))\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_REMOVE_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the delete selected messages dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data If the dialogue should show and checkbox shows to delete message for all users.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteSelectedMessages = function(header, body, footer, data) {\n        var showmessage = null;\n        if (data.type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteselectedmessagesconfirmselfconversation';\n        } else {\n            // This other message should be displayed.\n            if (data.canDeleteMessagesForAllUsers) {\n                showCheckDeleteDialogue(body);\n                showmessage = 'deleteforeveryoneselectedmessagesconfirm';\n            } else {\n                showmessage = 'deleteselectedmessagesconfirm';\n            }\n        }\n\n        if (data.show) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_SELECTED_MESSAGES],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {int|Null} type The conversation type to be removed.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteConversation = function(header, body, footer, type) {\n        var showmessage = null;\n        if (type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteallselfconfirm';\n        } else if (type) {\n            // This other message should be displayed.\n            showmessage = 'deleteallconfirm';\n        }\n\n        if (showmessage) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_CONVERSATION],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user The other user object.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmContactRequest = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('userwouldliketocontactyou', 'core_message', truncateUsername(user.fullname))\n                .then(function(string) {\n                    var buttonSelectors = [\n                        SELECTORS.ACTION_ACCEPT_CONTACT_REQUEST,\n                        SELECTORS.ACTION_DECLINE_CONTACT_REQUEST\n                    ];\n                    return showConfirmDialogue(header, body, footer, buttonSelectors, string, '', false, true);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var showCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        checkboxRegion.removeClass('hidden');\n    };\n\n    /**\n     * Hide the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var hideCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        var checkbox = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE);\n        checkbox.prop('checked', false);\n        checkboxRegion.addClass('hidden');\n    };\n\n    /**\n     * Show or hide the block / unblock option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isBlocked is user blocked.\n     */\n    var renderIsBlocked = function(header, body, footer, isBlocked) {\n        if (isBlocked) {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).addClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).removeClass('hidden');\n        } else {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).removeClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the favourite / unfavourite option in the header dropdown menu\n     * and the favourite star in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} state is this conversation a favourite.\n     */\n    var renderIsFavourite = function(header, body, footer, state) {\n        var favouriteIcon = header.find(SELECTORS.FAVOURITE_ICON_CONTAINER);\n        var addFavourite = header.find(SELECTORS.ACTION_CONFIRM_FAVOURITE);\n        var removeFavourite = header.find(SELECTORS.ACTION_CONFIRM_UNFAVOURITE);\n\n        switch (state) {\n            case 'hide':\n                favouriteIcon.addClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-add':\n                favouriteIcon.addClass('hidden');\n                addFavourite.removeClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-remove':\n                favouriteIcon.removeClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the mute / unmute option in the header dropdown menu\n     * and the muted icon in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {string} state The state of the conversation as defined by the patcher.\n     */\n    var renderIsMuted = function(header, body, footer, state) {\n        var muteIcon = header.find(SELECTORS.MUTED_ICON_CONTAINER);\n        var setMuted = header.find(SELECTORS.ACTION_CONFIRM_MUTE);\n        var unsetMuted = header.find(SELECTORS.ACTION_CONFIRM_UNMUTE);\n\n        switch (state) {\n            case 'hide':\n                muteIcon.addClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-mute':\n                muteIcon.addClass('hidden');\n                setMuted.removeClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-unmute':\n                muteIcon.removeClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the add / remove user as contact option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} state the contact state.\n     */\n    var renderIsContact = function(header, body, footer, state) {\n        var addContact = header.find(SELECTORS.ACTION_REQUEST_ADD_CONTACT);\n        var removeContact = header.find(SELECTORS.ACTION_REQUEST_REMOVE_CONTACT);\n\n        switch (state) {\n            case 'pending-contact':\n                addContact.addClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n            case 'contact':\n                addContact.addClass('hidden');\n                removeContact.removeClass('hidden');\n                break;\n            case 'non-contact':\n                addContact.removeClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide confirm action from confirm dialogue is loading.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading confirm action is loading.\n     */\n    var renderLoadingConfirmAction = function(header, body, footer, isLoading) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = dialogue.find('button');\n        var buttonText = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_BUTTON_TEXT);\n        var loadingIcon = dialogue.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        if (isLoading) {\n            buttons.prop('disabled', true);\n            buttonText.addClass('hidden');\n            loadingIcon.removeClass('hidden');\n        } else {\n            buttons.prop('disabled', false);\n            buttonText.removeClass('hidden');\n            loadingIcon.addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the header and footer content for edit mode.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} inEditMode In edit mode or not.\n     */\n    var renderInEditMode = function(header, body, footer, inEditMode) {\n        var messages = null;\n\n        if (inEditMode) {\n            messages = body.find(SELECTORS.MESSAGE_NOT_SELECTED);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n            hideHeaderContent(header);\n            showHeaderEditMode(header);\n        } else {\n            messages = getMessagesContainer(body);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n            messages.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n            showHeaderContent(header);\n            hideHeaderEditMode(header);\n        }\n    };\n\n    /**\n     * Select or unselect messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data The messages to select or unselect.\n     */\n    var renderSelectedMessages = function(header, body, footer, data) {\n        var hasSelectedMessages = data.count > 0;\n\n        if (data.add.length) {\n            data.add.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n                message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).removeClass('hidden');\n                message.attr('aria-checked', true);\n            });\n        }\n\n        if (data.remove.length) {\n            data.remove.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n\n                if (hasSelectedMessages) {\n                    message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n                }\n\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n                message.attr('aria-checked', false);\n            });\n        }\n\n        setMessagesSelectedCount(header, data.count);\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Whether the user has to be added a a contact.\n     * @return {Object} jQuery promise\n     */\n    var renderRequireAddContact = function(header, body, footer, data) {\n        if (data.show && !data.hasMessages) {\n            return Str.get_strings([\n                    {\n                        key: 'requirecontacttomessage',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    },\n                    {\n                        key: 'isnotinyourcontacts',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    }\n                ])\n                .then(function(strings) {\n                    var title = strings[1];\n                    var text = strings[0];\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_REQUEST_ADD_CONTACT],\n                        text,\n                        title,\n                        false,\n                        true\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show or hide the self-conversation message.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} displayMessage should the message be displayed?.\n     * @return {Object|true} jQuery promise\n     */\n    var renderSelfConversationMessage = function(header, body, footer, displayMessage) {\n        var container = getSelfConversationMessageContainer(body);\n        if (displayMessage) {\n            container.removeClass('hidden');\n        } else {\n            container.addClass('hidden');\n        }\n        return true;\n    };\n\n    /**\n     * Show or hide the unable to message container and enable or disable the footer messaging controls.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} disable should the message be displayed?.\n     * @return {Object|true} jQuery promise\n     */\n    var renderUnableToMessage = function(header, body, footer, disable) {\n        if (disable) {\n            disableAllFooterContentElements(footer);\n            if (!body.find(SELECTORS.DAY_MESSAGE_UNABLE_TO_SEND_CONTAINER).length) {\n                showUnableToMessage(body);\n            }\n        } else {\n            enableAllFooterContentElements(footer);\n            hideUnableToMessage(body);\n        }\n\n        return true;\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {String} userFullName Full name of the other user.\n     * @return {Object|true} jQuery promise\n     */\n    var renderContactRequestSent = function(header, body, footer, userFullName) {\n        var container = getContactRequestSentContainer(body);\n        if (userFullName) {\n            return Str.get_string('yourcontactrequestpending', 'core_message', truncateUsername(userFullName))\n                .then(function(string) {\n                    container.find(SELECTORS.TEXT).text(string);\n                    container.removeClass('hidden');\n                    return string;\n                });\n        } else {\n            container.addClass('hidden');\n            return true;\n        }\n    };\n\n    /**\n     * Reset the UI to the initial state.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool}\n     */\n    var renderReset = function(header, body, footer) {\n        hideConfirmDialogue(header, body, footer);\n        hideContactRequestSentContainer(body);\n        hideSelfConversationMessageContainer(body);\n        hideAllHeaderElements(header);\n        showHeaderPlaceholder(header);\n        hideAllFooterElements(footer);\n        showFooterPlaceholder(footer);\n        enableAllFooterContentElements(footer);\n        hideUnableToMessage(body);\n        return true;\n    };\n\n    var render = function(header, body, footer, patch) {\n        var configs = [\n            {\n                // Resetting the UI needs to come first, if it's required.\n                reset: renderReset\n            },\n            {\n                // Any async rendering (stuff that requires templates, strings etc) should\n                // go in here.\n                conversation: renderConversation,\n                header: renderHeader,\n                footer: renderFooter,\n                confirmBlockUser: renderConfirmBlockUser,\n                confirmUnblockUser: renderConfirmUnblockUser,\n                confirmAddContact: renderConfirmAddContact,\n                confirmRemoveContact: renderConfirmRemoveContact,\n                confirmDeleteSelectedMessages: renderConfirmDeleteSelectedMessages,\n                confirmDeleteConversation: renderConfirmDeleteConversation,\n                confirmContactRequest: renderConfirmContactRequest,\n                requireAddContact: renderRequireAddContact,\n                selfConversationMessage: renderSelfConversationMessage,\n                contactRequestSent: renderContactRequestSent,\n                unableToMessage: renderUnableToMessage,\n            },\n            {\n                loadingMembers: renderLoadingMembers,\n                loadingFirstMessages: renderLoadingFirstMessages,\n                loadingMessages: renderLoadingMessages,\n                isBlocked: renderIsBlocked,\n                isContact: renderIsContact,\n                isFavourite: renderIsFavourite,\n                isMuted: renderIsMuted,\n                loadingConfirmAction: renderLoadingConfirmAction,\n                inEditMode: renderInEditMode,\n                showEmojiPicker: renderShowEmojiPicker,\n                showEmojiAutoComplete: renderShowEmojiAutoComplete,\n            },\n            {\n                // Scrolling should be last to make sure everything\n                // on the page is visible.\n                scrollToMessage: renderScrollToMessage,\n                selectedMessages: renderSelectedMessages\n            }\n        ];\n        // Helper function to process each of the configs above.\n        var processConfig = function(config) {\n            var results = [];\n\n            for (var key in patch) {\n                if (config.hasOwnProperty(key)) {\n                    var renderFunc = config[key];\n                    var patchValue = patch[key];\n                    results.push(renderFunc(header, body, footer, patchValue));\n                }\n            }\n\n            return results;\n        };\n\n        // The first config is special because it resets the UI.\n        var renderingPromises = processConfig(configs[0]);\n        // The second config is special because it contains async rendering.\n        renderingPromises = renderingPromises.concat(processConfig(configs[1]));\n\n        // Wait for the async rendering to complete before processing the\n        // rest of the configs, in order.\n        return $.when.apply($, renderingPromises)\n            .then(function() {\n                for (var i = 2; i < configs.length; i++) {\n                    processConfig(configs[i]);\n                }\n\n                return;\n            })\n            .catch(Notification.exception);\n    };\n\n    /**\n     * Truncate long usernames.\n     *\n     * @param {String} username Text to truncate.\n     * @return {String} Truncated string.\n     */\n    var truncateUsername = function(username) {\n        return Truncate.truncate(username, {\n            length: 30,\n            words: true,\n            ellipsis: '...'\n        });\n    };\n\n    return {\n        render: render,\n    };\n});\n"],"names":["define","$","Notification","Str","Templates","UserDate","Constants","Aria","Truncate","SELECTORS","TEMPLATES","CONVERSATION_TYPES","getMessagesContainer","body","find","CONTENT_MESSAGES_CONTAINER","getSelfConversationMessageContainer","SELF_CONVERSATION_MESSAGE_CONTAINER","getUnableToMessageContainer","UNABLE_TO_MESSAGE_CONTAINER","getMessageTextArea","footer","MESSAGE_TEXT_AREA","getSendMessageButton","SEND_MESSAGE_BUTTON","getEmojiPickerButton","TOGGLE_EMOJI_PICKER_BUTTON","getContactRequestSentContainer","CONTACT_REQUEST_SENT_MESSAGE_CONTAINER","getFooterContentContainer","CONTENT_MESSAGES_FOOTER_CONTAINER","getFooterEditModeContainer","CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER","getFooterPlaceholderContainer","PLACEHOLDER_CONTAINER","showFooterPlaceholder","removeClass","getFooterRequireContactContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER","getFooterRequireUnblockContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER","hideAllFooterElements","addClass","hideFooterContent","hideFooterEditMode","hideFooterPlaceholder","hideFooterRequireContact","hideFooterRequireUnblock","getContentPlaceholderContainer","CONTENT_PLACEHOLDER_CONTAINER","getHeaderContent","header","HEADER","showHeaderContent","hideHeaderContent","hideUnableToMessage","enableAllFooterContentElements","prop","enableEmojiPickerButton","enableSendMessageButton","messageTextArea","unhide","get","get_string","done","string","enableMessageTextArea","disableAllFooterContentElements","disableEmojiPickerButton","disableSendMessageButton","removeAttr","disableMessageTextArea","getHeaderEditMode","HEADER_EDIT_MODE","hideHeaderEditMode","getHeaderPlaceholderContainer","HEADER_PLACEHOLDER_CONTAINER","showHeaderPlaceholder","hideHeaderPlaceholder","getMessageElement","messageId","getDayElement","dayTimeCreated","getMoreMessagesLoadingIconContainer","MORE_MESSAGES_LOADING_ICON_CONTAINER","getConfirmDialogueContainer","root","CONFIRM_DIALOGUE_CONTAINER","showConfirmDialogueContainer","container","siblings","hide","attr","hideConfirmDialogueContainer","formatMessagesForTemplate","messages","datesCache","map","message","id","isread","isRead","fromloggedinuser","fromLoggedInUser","userfrom","userFrom","text","formattedtime","timeCreated","renderConversation","data","renderingPromises","hasAddDays","days","add","length","hasAddMessages","hasUpdateMessages","update","timestampsToFormat","datesCachePromise","Deferred","resolve","promise","concat","reduce","carry","day","value","timestamps","push","before","after","then","format","requests","timestamp","formattedTimes","index","isAbleToMessage","messagesContainer","daysRenderPromises","timestampDate","Date","render","DAY","currentyear","getFullYear","when","apply","forEach","html","element","insertBefore","append","always","showUnableToMessage","DAY_MESSAGE_UNABLE_TO_SEND_CONTAINER","last","toggleClass","catch","renderAddDays","unableToMessage","messagesData","formattedMessages","MESSAGES","messageList","messageHtml","DAY_MESSAGES_CONTAINER","renderAddMessages","formattedTime","LOADING_ICON_CONTAINER","TIME_CREATED","sendState","loading","time","retry","RETRY_SEND","TEXT_CONTAINER","errorMessage","messageContainer","ERROR_MESSAGE_CONTAINER","ERROR_MESSAGE","renderUpdateMessages","remove","renderRemoveDays","renderRemoveMessages","renderHeader","headerContainer","template","HEADER_PUBLIC","context","showrouteback","type","PRIVATE","showControls","HEADER_PRIVATE","HEADER_PRIVATE_NO_CONTROLS","SELF","HEADER_SELF","js","replaceNodeContents","renderFooter","get_strings","key","component","param","user","fullname","strings","title","footerContainer","TITLE","TEXT","showFooterRequireContact","showFooterEditMode","showFooterContent","showFooterRequireUnblock","renderScrollToMessage","position","scrollTop","top","renderLoadingMembers","isLoadingMembers","renderLoadingFirstMessages","isLoadingFirstMessages","hideMessagesContainer","showContentPlaceholder","showMessagesContainer","hideContentPlaceholder","renderLoadingMessages","isLoading","showMoreMessagesLoadingIcon","hideMoreMessagesLoadingIcon","renderShowEmojiPicker","show","EMOJI_PICKER_CONTAINER","getEmojiPickerContainer","EMOJI_PICKER_SEARCH_INPUT","focus","renderShowEmojiAutoComplete","EMOJI_AUTO_COMPLETE_CONTAINER","getEmojiAutoCompleteContainer","showConfirmDialogue","buttonSelectors","bodyText","headerText","canCancel","skipHeader","showOk","dialogue","buttons","selector","cancelButton","CONFIRM_DIALOGUE_CANCEL_BUTTON","okayButton","CONFIRM_DIALOGUE_OKAY_BUTTON","CONFIRM_DIALOGUE_TEXT","dialogueHeader","CONFIRM_DIALOGUE_HEADER","CONFIRM_DIALOGUE","prepend","button","CAN_RECEIVE_FOCUS","filter","first","hideConfirmDialogue","hideCheckDeleteDialogue","renderConfirmBlockUser","username","truncateUsername","canmessageevenifblocked","ACTION_CONFIRM_BLOCK","renderConfirmUnblockUser","ACTION_CONFIRM_UNBLOCK","renderConfirmAddContact","userFullName","truncate","words","ellipsis","ACTION_CONFIRM_ADD_CONTACT","renderConfirmRemoveContact","ACTION_CONFIRM_REMOVE_CONTACT","renderConfirmDeleteSelectedMessages","showmessage","canDeleteMessagesForAllUsers","showCheckDeleteDialogue","ACTION_CONFIRM_DELETE_SELECTED_MESSAGES","renderConfirmDeleteConversation","ACTION_CONFIRM_DELETE_CONVERSATION","renderConfirmContactRequest","ACTION_ACCEPT_CONTACT_REQUEST","ACTION_DECLINE_CONTACT_REQUEST","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER","checkboxRegion","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE","renderIsBlocked","isBlocked","ACTION_REQUEST_BLOCK","ACTION_REQUEST_UNBLOCK","renderIsFavourite","state","favouriteIcon","FAVOURITE_ICON_CONTAINER","addFavourite","ACTION_CONFIRM_FAVOURITE","removeFavourite","ACTION_CONFIRM_UNFAVOURITE","renderIsMuted","muteIcon","MUTED_ICON_CONTAINER","setMuted","ACTION_CONFIRM_MUTE","unsetMuted","ACTION_CONFIRM_UNMUTE","renderIsContact","addContact","ACTION_REQUEST_ADD_CONTACT","removeContact","ACTION_REQUEST_REMOVE_CONTACT","renderLoadingConfirmAction","buttonText","CONFIRM_DIALOGUE_BUTTON_TEXT","loadingIcon","renderInEditMode","inEditMode","MESSAGE_NOT_SELECTED","MESSAGE_NOT_SELECTED_ICON","showHeaderEditMode","MESSAGE_SELECTED_ICON","renderSelectedMessages","hasSelectedMessages","count","MESSAGES_SELECTED_COUNT","setMessagesSelectedCount","renderRequireAddContact","hasMessages","renderSelfConversationMessage","displayMessage","renderUnableToMessage","disable","renderContactRequestSent","renderReset","hideContactRequestSentContainer","hideSelfConversationMessageContainer","hideAllHeaderElements","patch","configs","reset","conversation","confirmBlockUser","confirmUnblockUser","confirmAddContact","confirmRemoveContact","confirmDeleteSelectedMessages","confirmDeleteConversation","confirmContactRequest","requireAddContact","selfConversationMessage","contactRequestSent","loadingMembers","loadingFirstMessages","loadingMessages","isContact","isFavourite","isMuted","loadingConfirmAction","showEmojiPicker","showEmojiAutoComplete","scrollToMessage","selectedMessages","processConfig","config","results","hasOwnProperty","renderFunc","patchValue","i","exception"],"mappings":"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"}